class Solution {
    static long mod = 1000000007;
    static Long[][] memo;
    
    public int knightDialer(int N) {
       
        int[][] graph = new int[][]{{4,6},{6,8},{7,9},{4,8},{3,9,0},{},
                                     {1,7,0},{2,6},{1,3},{2,4}};
        memo = new Long[N+1][10];
        
        long total=0;
        for(int i=0;i<=9;i++)
            total = (total + find(i, graph, N-1)) % mod;
        
        return (int)total;
        
    }
    
    public static long find(int start, int[][] graph, int n){
        
        if(n==0 )
            return 1;
        if (memo[n][start] != null)
            return memo[n][start];
        
        long sum=0;
        for(int i : graph[start]){
            sum = (sum + find(i, graph, n-1)) % mod;
        }
        return memo[n][start] = sum ;
    }
    
}
